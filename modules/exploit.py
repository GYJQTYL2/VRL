#! /usr/bin/python
#coding:utf-8

'''prototype of exploit'''

class VRL_Exploit():

    def check(self):
        '''return 0 if check failed'''
        if not hasattr(self, 'run') :
            print 'Error: the exploit does not have a run function, stop checking.'
            return 0
        if not hasattr(self, 'vulnerability'): print 'Warning: the exploit does not have a default target vulnerability.\n'
        if not hasattr(self, 'options'): print 'Warning: the exploit does not have options.\n'
        if 'default_payload' in self.options.keys():
            if not hasattr(self, 'payload'):
                print 'Error: The exploit class must has "payload" attribute when "default_payload" exists.'
                return
            print ">Exploit has a default payload,loading..."
            _temp = __import__('payloads.' + self.options['default_payload'], globals(), locals(),
                               fromlist=['Payload'])
            Payload = _temp.Payload
            pay = Payload()
            self.payload = pay.data
            print ">Default payload: '" + self.options["default_payload"] + "' loaded."
        print 'Check Finished\n'
        return 1

if __name__=='__main__':
    print 'Prototype of exploit, read documents for more information.\n'
